@page "/admin/cursos"
@using AppCursos.Models
@inject AppCursos.Services.CursoService cursos
@inject AppCursos.Services.SesionService sesion
@inject NavigationManager nav

<h3 class="mb-3">Administrar cursos</h3>

@if (!sesion.EstaLogueado)
{
    <div class="alert alert-info">Redirigiendo a login…</div>
}
else if (!EsAdmin)
{
    <div class="alert alert-danger"><strong>403.</strong> Acceso denegado. Sección solo para administradores.</div>
}
else
{
    <div class="d-flex justify-content-end mb-2">
        <a href="/admin/crear" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Nuevo curso
        </a>
    </div>

    @if (pendienteBorrar is not null)
    {
        <div class="alert alert-warning d-flex justify-content-between align-items-center">
            <div>¿Eliminar <strong>@pendienteBorrar.Titulo</strong>?</div>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-outline-secondary" @onclick="CancelarBorrar">Cancelar</button>
                <button class="btn btn-sm btn-danger" @onclick="ConfirmarBorrar">
                    <i class="bi bi-trash"></i> Eliminar
                </button>
            </div>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped align-middle">
            <thead>
                <tr>
                    <th>Imagen</th>
                    <th>Título</th>
                    <th>Categoría</th>
                    <th>Descripción</th>
                    <th class="text-end">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in cursos.ObtenerTodos())
                {
                    <tr>
                        <td>
                            <img src="@Img(c.ImagenPath)" width="56" height="40" style="object-fit:cover"
                                 onerror="this.onerror=null;this.src='/images/placeholder.png';" />
                        </td>
                        <td>@c.Titulo</td>
                        <td><span class="badge bg-info">@c.Categoria</span></td>
                        <td class="text-muted">@c.Descripcion</td>
                        <td class="text-end text-nowrap">
                            <div class="btn-group">
                                <a class="btn btn-outline-secondary btn-sm" href="/admin/cursos/editar/@c.Id" title="Editar">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <button class="btn btn-outline-danger btn-sm" title="Eliminar"
                                        @onclick="() => SolicitarBorrar(c)">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    bool EsAdmin => string.Equals(sesion.UsuarioActual?.Rol, "Admin", StringComparison.OrdinalIgnoreCase);
    Curso? pendienteBorrar;

    protected override void OnInitialized()
    {
        if (!sesion.EstaLogueado)
        {
            var here = "/" + nav.ToBaseRelativePath(nav.Uri);
            nav.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(here)}", true);
        }
    }

    string Img(string? p)
    {
        p = (p ?? "").Trim();
        if (string.IsNullOrWhiteSpace(p)) return "/images/placeholder.png";
        if (p[0] != '/') p = "/" + p;
        return p;
    }

    void SolicitarBorrar(Curso c) => pendienteBorrar = c;
    void CancelarBorrar() => pendienteBorrar = null;
    void ConfirmarBorrar()
    {
        if (pendienteBorrar is null) return;
        cursos.Eliminar(pendienteBorrar.Id);
        pendienteBorrar = null;
        StateHasChanged();
    }
}
