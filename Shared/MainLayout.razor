@* MainLayout.razor *@
@inherits LayoutComponentBase
@using AppCursos.Services
@inject SesionService sesion
@inject NavigationManager nav

<div class="container py-3">
    @if (!EsLogin && (sesion.EstaLogueado || sesion.EsInvitado))
    {
        <div class="d-flex justify-content-between mb-2">
            <div class="d-flex gap-2">

                @* SIEMPRE visible (logueado o invitado) *@
                <a href="/cursos" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-journal-text"></i> Cursos
                </a>

                @* Solo Admin ve Usuarios *@
                @if (string.Equals(sesion.UsuarioActual?.Rol, "Admin", StringComparison.OrdinalIgnoreCase))
                {
                    <a href="/usuarios" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-people"></i> Usuarios
                    </a>

                    @* Solo Admin ve Gestión de cursos *@
                    <a href="/admin/cursos" class="btn btn-outline-warning btn-sm">
                        <i class="bi bi-tools"></i> Gestionar cursos
                    </a>
                }
            </div>

            <a href="/logout" class="btn btn-outline-danger btn-sm">
                <i class="bi bi-box-arrow-right"></i> Salir
            </a>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-body">
            @Body
        </div>
    </div>
</div>

@code {
    bool EsLogin;
    protected override void OnParametersSet()
    {
        var path = nav.ToBaseRelativePath(nav.Uri).TrimEnd('/');
        EsLogin = string.IsNullOrEmpty(path) ||
                  path.Equals("login", StringComparison.OrdinalIgnoreCase);
    }
}
